{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactsList/ContactItem/ContactItem.module.css"],"names":["module","exports","ContactForm","state","name","number","onSubmit","e","props","preventDefault","formReset","setState","onChange","currentTarget","value","this","type","pattern","title","required","React","Component","ContactItem","contacts","onDeleteClick","map","id","className","styles","contacts_item","contacts_item_button","onClick","ContactsList","Filter","onFilter","placeholder","App","filter","onDeleteContactClick","prevState","i","onFilterInput","onFilterChange","toLowerCase","includes","onFormSubmit","contact","shortid","generate","some","alert","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","container","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3493df6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3jpk9\"};","import React from \"react\"\r\nimport PropTypes from \"prop-types\" // ES6\r\n\r\nclass ContactForm extends React.Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  }\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    const { onSubmit } = this.props\r\n    e.preventDefault()\r\n    onSubmit(this.state)\r\n    this.formReset()\r\n  }\r\n\r\n  formReset = () => {\r\n    this.setState({ name: \"\", number: \"\" })\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value })\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.onChange}\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.onChange}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" onSubmit={this.onSubmit}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm\r\n","import React from \"react\"\r\nimport styles from \"./ContactItem.module.css\"\r\nconst ContactItem = ({ contacts, onDeleteClick }) =>\r\n  contacts.map(({ id, name, number }) => {\r\n    return (\r\n      <li key={id} className={styles.contacts_item}>\r\n        {name}: {number}\r\n        <button className={styles.contacts_item_button} onClick={() => onDeleteClick(id)} type=\"button\">\r\n          Delete\r\n        </button>\r\n      </li>\r\n    )\r\n  })\r\n\r\nexport default ContactItem\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport ContactItem from './ContactItem';\r\n\r\nconst ContactsList = ({contacts, onDeleteClick}) => \r\n  <ul>\r\n    <ContactItem contacts={contacts} onDeleteClick={onDeleteClick }/>\r\n  </ul>\r\n\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactsList;\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  return <input type=\"text\" value={value} placeholder=\"Filter\" onChange={onFilter} />\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter\r\n","import React from \"react\"\nimport shortid from \"shortid\"\nimport ContactForm from \"./components/ContactForm\"\nimport ContactsList from \"./components/ContactsList\"\nimport Filter from \"./components/Filter\"\n\nimport styles from \"./App.module.css\"\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  }\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"))\n    if (contacts) {\n      this.setState({\n        contacts: contacts,\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts))\n    }\n  }\n\n  onDeleteContactClick = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((i) => i.id !== id),\n    }))\n  }\n\n  onFilterInput = (e) => {\n    const value = e.currentTarget.value\n    this.setState({ filter: value })\n  }\n\n  onFilterChange = () => {\n    const { contacts, filter } = this.state\n    return contacts.filter((i) => i.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  onFormSubmit = ({ name, number }) => {\n    const { contacts } = this.state\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }\n    contacts.some((i) => i.name === name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }))\n  }\n\n  render() {\n    const contacts = this.onFilterChange()\n    const { filter } = this.state\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.onFormSubmit} />\n        {contacts.length === 0 ? (\n          <h2 className=\"filter-welcome-title\">Please Add Contact</h2>\n        ) : (\n          <>\n            <h2>Contacts</h2>\n            <Filter value={filter} onFilter={this.onFilterInput} />\n            <ContactsList contacts={contacts} onDeleteClick={this.onDeleteContactClick} />\n          </>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_item\":\"ContactItem_contacts_item__1yfXM\",\"contacts_item_button\":\"ContactItem_contacts_item_button__2GaXN\"};"],"sourceRoot":""}